/*
 * Rekki.com Supplier API
 *
 * The base URL for all API endpoints is https://api.rekki.com  Api key value contains of word Bearer together with api key that you can get from integrations@rekki.com 
 *
 * API version: 
 * Contact: integrations@rekki.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MainAPISupplierCatalogItem struct for MainAPISupplierCatalogItem
type MainAPISupplierCatalogItem struct {
	// List of allergens for the item, if any.
	Allergens *[]CatalogAllergen `json:"allergens,omitempty"`
	// Availability status of the item. Defaults to in_stock.
	Availability *string `json:"availability,omitempty"`
	// Currency code for the price. In ISO 4217 three-letter format. Defaults to GBP.
	Currency *string `json:"currency,omitempty"`
	// Product description
	Description *string `json:"description,omitempty"`
	// REKKI's ID to uniquely identify the catalog item (for REKKI internal reference).
	Id *int32 `json:"id,omitempty"`
	// Item name as would be defined on the customer's product list.
	Name *string `json:"name,omitempty"`
	OrderCutoffTimes *CatalogOrderCutoffTimes `json:"order_cutoff_times,omitempty"`
	// Product code for the item that maps to the supplier's catalog. Suppliers can modify the product code for future orders at https://supplier.rekki.com
	ProductCode *string `json:"product_code,omitempty"`
	// List of product codes for alternative items when this item is not available.
	ReplacementProducts *[]string `json:"replacement_products,omitempty"`
	// List of date ranges when the item is in-season.
	Seasonality *[]CatalogSeasonality `json:"seasonality,omitempty"`
	// List of units and their prices that the item can be ordered in.
	UnitsPrices *[]MainAPISupplierCatalogUnit `json:"units_prices,omitempty"`
}

// NewMainAPISupplierCatalogItem instantiates a new MainAPISupplierCatalogItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMainAPISupplierCatalogItem() *MainAPISupplierCatalogItem {
	this := MainAPISupplierCatalogItem{}
	return &this
}

// NewMainAPISupplierCatalogItemWithDefaults instantiates a new MainAPISupplierCatalogItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMainAPISupplierCatalogItemWithDefaults() *MainAPISupplierCatalogItem {
	this := MainAPISupplierCatalogItem{}
	return &this
}

// GetAllergens returns the Allergens field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetAllergens() []CatalogAllergen {
	if o == nil || o.Allergens == nil {
		var ret []CatalogAllergen
		return ret
	}
	return *o.Allergens
}

// GetAllergensOk returns a tuple with the Allergens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetAllergensOk() (*[]CatalogAllergen, bool) {
	if o == nil || o.Allergens == nil {
		return nil, false
	}
	return o.Allergens, true
}

// HasAllergens returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasAllergens() bool {
	if o != nil && o.Allergens != nil {
		return true
	}

	return false
}

// SetAllergens gets a reference to the given []CatalogAllergen and assigns it to the Allergens field.
func (o *MainAPISupplierCatalogItem) SetAllergens(v []CatalogAllergen) {
	o.Allergens = &v
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetAvailability() string {
	if o == nil || o.Availability == nil {
		var ret string
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetAvailabilityOk() (*string, bool) {
	if o == nil || o.Availability == nil {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasAvailability() bool {
	if o != nil && o.Availability != nil {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given string and assigns it to the Availability field.
func (o *MainAPISupplierCatalogItem) SetAvailability(v string) {
	o.Availability = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *MainAPISupplierCatalogItem) SetCurrency(v string) {
	o.Currency = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MainAPISupplierCatalogItem) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MainAPISupplierCatalogItem) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MainAPISupplierCatalogItem) SetName(v string) {
	o.Name = &v
}

// GetOrderCutoffTimes returns the OrderCutoffTimes field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetOrderCutoffTimes() CatalogOrderCutoffTimes {
	if o == nil || o.OrderCutoffTimes == nil {
		var ret CatalogOrderCutoffTimes
		return ret
	}
	return *o.OrderCutoffTimes
}

// GetOrderCutoffTimesOk returns a tuple with the OrderCutoffTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetOrderCutoffTimesOk() (*CatalogOrderCutoffTimes, bool) {
	if o == nil || o.OrderCutoffTimes == nil {
		return nil, false
	}
	return o.OrderCutoffTimes, true
}

// HasOrderCutoffTimes returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasOrderCutoffTimes() bool {
	if o != nil && o.OrderCutoffTimes != nil {
		return true
	}

	return false
}

// SetOrderCutoffTimes gets a reference to the given CatalogOrderCutoffTimes and assigns it to the OrderCutoffTimes field.
func (o *MainAPISupplierCatalogItem) SetOrderCutoffTimes(v CatalogOrderCutoffTimes) {
	o.OrderCutoffTimes = &v
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetProductCode() string {
	if o == nil || o.ProductCode == nil {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetProductCodeOk() (*string, bool) {
	if o == nil || o.ProductCode == nil {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasProductCode() bool {
	if o != nil && o.ProductCode != nil {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *MainAPISupplierCatalogItem) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetReplacementProducts returns the ReplacementProducts field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetReplacementProducts() []string {
	if o == nil || o.ReplacementProducts == nil {
		var ret []string
		return ret
	}
	return *o.ReplacementProducts
}

// GetReplacementProductsOk returns a tuple with the ReplacementProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetReplacementProductsOk() (*[]string, bool) {
	if o == nil || o.ReplacementProducts == nil {
		return nil, false
	}
	return o.ReplacementProducts, true
}

// HasReplacementProducts returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasReplacementProducts() bool {
	if o != nil && o.ReplacementProducts != nil {
		return true
	}

	return false
}

// SetReplacementProducts gets a reference to the given []string and assigns it to the ReplacementProducts field.
func (o *MainAPISupplierCatalogItem) SetReplacementProducts(v []string) {
	o.ReplacementProducts = &v
}

// GetSeasonality returns the Seasonality field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetSeasonality() []CatalogSeasonality {
	if o == nil || o.Seasonality == nil {
		var ret []CatalogSeasonality
		return ret
	}
	return *o.Seasonality
}

// GetSeasonalityOk returns a tuple with the Seasonality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetSeasonalityOk() (*[]CatalogSeasonality, bool) {
	if o == nil || o.Seasonality == nil {
		return nil, false
	}
	return o.Seasonality, true
}

// HasSeasonality returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasSeasonality() bool {
	if o != nil && o.Seasonality != nil {
		return true
	}

	return false
}

// SetSeasonality gets a reference to the given []CatalogSeasonality and assigns it to the Seasonality field.
func (o *MainAPISupplierCatalogItem) SetSeasonality(v []CatalogSeasonality) {
	o.Seasonality = &v
}

// GetUnitsPrices returns the UnitsPrices field value if set, zero value otherwise.
func (o *MainAPISupplierCatalogItem) GetUnitsPrices() []MainAPISupplierCatalogUnit {
	if o == nil || o.UnitsPrices == nil {
		var ret []MainAPISupplierCatalogUnit
		return ret
	}
	return *o.UnitsPrices
}

// GetUnitsPricesOk returns a tuple with the UnitsPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainAPISupplierCatalogItem) GetUnitsPricesOk() (*[]MainAPISupplierCatalogUnit, bool) {
	if o == nil || o.UnitsPrices == nil {
		return nil, false
	}
	return o.UnitsPrices, true
}

// HasUnitsPrices returns a boolean if a field has been set.
func (o *MainAPISupplierCatalogItem) HasUnitsPrices() bool {
	if o != nil && o.UnitsPrices != nil {
		return true
	}

	return false
}

// SetUnitsPrices gets a reference to the given []MainAPISupplierCatalogUnit and assigns it to the UnitsPrices field.
func (o *MainAPISupplierCatalogItem) SetUnitsPrices(v []MainAPISupplierCatalogUnit) {
	o.UnitsPrices = &v
}

func (o MainAPISupplierCatalogItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Allergens != nil {
		toSerialize["allergens"] = o.Allergens
	}
	if o.Availability != nil {
		toSerialize["availability"] = o.Availability
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OrderCutoffTimes != nil {
		toSerialize["order_cutoff_times"] = o.OrderCutoffTimes
	}
	if o.ProductCode != nil {
		toSerialize["product_code"] = o.ProductCode
	}
	if o.ReplacementProducts != nil {
		toSerialize["replacement_products"] = o.ReplacementProducts
	}
	if o.Seasonality != nil {
		toSerialize["seasonality"] = o.Seasonality
	}
	if o.UnitsPrices != nil {
		toSerialize["units_prices"] = o.UnitsPrices
	}
	return json.Marshal(toSerialize)
}

type NullableMainAPISupplierCatalogItem struct {
	value *MainAPISupplierCatalogItem
	isSet bool
}

func (v NullableMainAPISupplierCatalogItem) Get() *MainAPISupplierCatalogItem {
	return v.value
}

func (v *NullableMainAPISupplierCatalogItem) Set(val *MainAPISupplierCatalogItem) {
	v.value = val
	v.isSet = true
}

func (v NullableMainAPISupplierCatalogItem) IsSet() bool {
	return v.isSet
}

func (v *NullableMainAPISupplierCatalogItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMainAPISupplierCatalogItem(val *MainAPISupplierCatalogItem) *NullableMainAPISupplierCatalogItem {
	return &NullableMainAPISupplierCatalogItem{value: val, isSet: true}
}

func (v NullableMainAPISupplierCatalogItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMainAPISupplierCatalogItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


