/*
 * Rekki.com Supplier API
 *
 * The base URL for all API endpoints is https://api.rekki.com  Api key value contains of word Bearer together with api key that you can get from integrations@rekki.com 
 *
 * API version: 
 * Contact: integrations@rekki.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MainStockItemState struct for MainStockItemState
type MainStockItemState struct {
	// only possible values are `in_stock` or `out_of_stock`
	Availability string `json:"availability"`
	ProductCode string `json:"product_code"`
}

// NewMainStockItemState instantiates a new MainStockItemState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMainStockItemState(availability string, productCode string, ) *MainStockItemState {
	this := MainStockItemState{}
	this.Availability = availability
	this.ProductCode = productCode
	return &this
}

// NewMainStockItemStateWithDefaults instantiates a new MainStockItemState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMainStockItemStateWithDefaults() *MainStockItemState {
	this := MainStockItemState{}
	return &this
}

// GetAvailability returns the Availability field value
func (o *MainStockItemState) GetAvailability() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value
// and a boolean to check if the value has been set.
func (o *MainStockItemState) GetAvailabilityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Availability, true
}

// SetAvailability sets field value
func (o *MainStockItemState) SetAvailability(v string) {
	o.Availability = v
}

// GetProductCode returns the ProductCode field value
func (o *MainStockItemState) GetProductCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value
// and a boolean to check if the value has been set.
func (o *MainStockItemState) GetProductCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProductCode, true
}

// SetProductCode sets field value
func (o *MainStockItemState) SetProductCode(v string) {
	o.ProductCode = v
}

func (o MainStockItemState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["availability"] = o.Availability
	}
	if true {
		toSerialize["product_code"] = o.ProductCode
	}
	return json.Marshal(toSerialize)
}

type NullableMainStockItemState struct {
	value *MainStockItemState
	isSet bool
}

func (v NullableMainStockItemState) Get() *MainStockItemState {
	return v.value
}

func (v *NullableMainStockItemState) Set(val *MainStockItemState) {
	v.value = val
	v.isSet = true
}

func (v NullableMainStockItemState) IsSet() bool {
	return v.isSet
}

func (v *NullableMainStockItemState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMainStockItemState(val *MainStockItemState) *NullableMainStockItemState {
	return &NullableMainStockItemState{value: val, isSet: true}
}

func (v NullableMainStockItemState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMainStockItemState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


