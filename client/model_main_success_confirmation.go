/*
 * Rekki.com Supplier API
 *
 * The base URL for all API endpoints is https://api.rekki.com  Api key value contains of word Bearer together with api key that you can get from integrations@rekki.com 
 *
 * API version: 
 * Contact: integrations@rekki.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MainSuccessConfirmation struct for MainSuccessConfirmation
type MainSuccessConfirmation struct {
	Success *bool `json:"success,omitempty"`
}

// NewMainSuccessConfirmation instantiates a new MainSuccessConfirmation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMainSuccessConfirmation() *MainSuccessConfirmation {
	this := MainSuccessConfirmation{}
	return &this
}

// NewMainSuccessConfirmationWithDefaults instantiates a new MainSuccessConfirmation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMainSuccessConfirmationWithDefaults() *MainSuccessConfirmation {
	this := MainSuccessConfirmation{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *MainSuccessConfirmation) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainSuccessConfirmation) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *MainSuccessConfirmation) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *MainSuccessConfirmation) SetSuccess(v bool) {
	o.Success = &v
}

func (o MainSuccessConfirmation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableMainSuccessConfirmation struct {
	value *MainSuccessConfirmation
	isSet bool
}

func (v NullableMainSuccessConfirmation) Get() *MainSuccessConfirmation {
	return v.value
}

func (v *NullableMainSuccessConfirmation) Set(val *MainSuccessConfirmation) {
	v.value = val
	v.isSet = true
}

func (v NullableMainSuccessConfirmation) IsSet() bool {
	return v.isSet
}

func (v *NullableMainSuccessConfirmation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMainSuccessConfirmation(val *MainSuccessConfirmation) *NullableMainSuccessConfirmation {
	return &NullableMainSuccessConfirmation{value: val, isSet: true}
}

func (v NullableMainSuccessConfirmation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMainSuccessConfirmation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


