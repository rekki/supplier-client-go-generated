/*
 * Rekki.com Supplier API
 *
 * The base URL for all API endpoints is https://api.rekki.com  Api key value contains of word Bearer together with api key that you can get from integrations@rekki.com 
 *
 * API version: 
 * Contact: integrations@rekki.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// V3SetErrorOrderInput struct for V3SetErrorOrderInput
type V3SetErrorOrderInput struct {
	// list of orders failed to integrate, required
	Orders *[]V3OrderIntegrationError `json:"orders,omitempty"`
}

// NewV3SetErrorOrderInput instantiates a new V3SetErrorOrderInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3SetErrorOrderInput() *V3SetErrorOrderInput {
	this := V3SetErrorOrderInput{}
	return &this
}

// NewV3SetErrorOrderInputWithDefaults instantiates a new V3SetErrorOrderInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3SetErrorOrderInputWithDefaults() *V3SetErrorOrderInput {
	this := V3SetErrorOrderInput{}
	return &this
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *V3SetErrorOrderInput) GetOrders() []V3OrderIntegrationError {
	if o == nil || o.Orders == nil {
		var ret []V3OrderIntegrationError
		return ret
	}
	return *o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3SetErrorOrderInput) GetOrdersOk() (*[]V3OrderIntegrationError, bool) {
	if o == nil || o.Orders == nil {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *V3SetErrorOrderInput) HasOrders() bool {
	if o != nil && o.Orders != nil {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []V3OrderIntegrationError and assigns it to the Orders field.
func (o *V3SetErrorOrderInput) SetOrders(v []V3OrderIntegrationError) {
	o.Orders = &v
}

func (o V3SetErrorOrderInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Orders != nil {
		toSerialize["orders"] = o.Orders
	}
	return json.Marshal(toSerialize)
}

type NullableV3SetErrorOrderInput struct {
	value *V3SetErrorOrderInput
	isSet bool
}

func (v NullableV3SetErrorOrderInput) Get() *V3SetErrorOrderInput {
	return v.value
}

func (v *NullableV3SetErrorOrderInput) Set(val *V3SetErrorOrderInput) {
	v.value = val
	v.isSet = true
}

func (v NullableV3SetErrorOrderInput) IsSet() bool {
	return v.isSet
}

func (v *NullableV3SetErrorOrderInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3SetErrorOrderInput(val *V3SetErrorOrderInput) *NullableV3SetErrorOrderInput {
	return &NullableV3SetErrorOrderInput{value: val, isSet: true}
}

func (v NullableV3SetErrorOrderInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3SetErrorOrderInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


