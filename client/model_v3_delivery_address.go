/*
 * Rekki.com Supplier API
 *
 * The base URL for all API endpoints is https://api.rekki.com  Api key value contains of word Bearer together with api key that you can get from integrations@rekki.com 
 *
 * API version: 
 * Contact: integrations@rekki.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// V3DeliveryAddress struct for V3DeliveryAddress
type V3DeliveryAddress struct {
	Address *string `json:"address,omitempty"`
	City *string `json:"city,omitempty"`
	Country *string `json:"country,omitempty"`
	Postcode *string `json:"postcode,omitempty"`
}

// NewV3DeliveryAddress instantiates a new V3DeliveryAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3DeliveryAddress() *V3DeliveryAddress {
	this := V3DeliveryAddress{}
	return &this
}

// NewV3DeliveryAddressWithDefaults instantiates a new V3DeliveryAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3DeliveryAddressWithDefaults() *V3DeliveryAddress {
	this := V3DeliveryAddress{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *V3DeliveryAddress) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DeliveryAddress) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *V3DeliveryAddress) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *V3DeliveryAddress) SetAddress(v string) {
	o.Address = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *V3DeliveryAddress) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DeliveryAddress) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *V3DeliveryAddress) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *V3DeliveryAddress) SetCity(v string) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *V3DeliveryAddress) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DeliveryAddress) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *V3DeliveryAddress) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *V3DeliveryAddress) SetCountry(v string) {
	o.Country = &v
}

// GetPostcode returns the Postcode field value if set, zero value otherwise.
func (o *V3DeliveryAddress) GetPostcode() string {
	if o == nil || o.Postcode == nil {
		var ret string
		return ret
	}
	return *o.Postcode
}

// GetPostcodeOk returns a tuple with the Postcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DeliveryAddress) GetPostcodeOk() (*string, bool) {
	if o == nil || o.Postcode == nil {
		return nil, false
	}
	return o.Postcode, true
}

// HasPostcode returns a boolean if a field has been set.
func (o *V3DeliveryAddress) HasPostcode() bool {
	if o != nil && o.Postcode != nil {
		return true
	}

	return false
}

// SetPostcode gets a reference to the given string and assigns it to the Postcode field.
func (o *V3DeliveryAddress) SetPostcode(v string) {
	o.Postcode = &v
}

func (o V3DeliveryAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Postcode != nil {
		toSerialize["postcode"] = o.Postcode
	}
	return json.Marshal(toSerialize)
}

type NullableV3DeliveryAddress struct {
	value *V3DeliveryAddress
	isSet bool
}

func (v NullableV3DeliveryAddress) Get() *V3DeliveryAddress {
	return v.value
}

func (v *NullableV3DeliveryAddress) Set(val *V3DeliveryAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableV3DeliveryAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableV3DeliveryAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3DeliveryAddress(val *V3DeliveryAddress) *NullableV3DeliveryAddress {
	return &NullableV3DeliveryAddress{value: val, isSet: true}
}

func (v NullableV3DeliveryAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3DeliveryAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


