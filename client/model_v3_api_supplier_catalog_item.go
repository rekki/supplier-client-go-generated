/*
 * Rekki.com Supplier API
 *
 * The base URL for all API endpoints is https://api.rekki.com  Api key value contains of word Bearer together with api key that you can get from integrations@rekki.com 
 *
 * API version: 
 * Contact: integrations@rekki.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// V3APISupplierCatalogItem struct for V3APISupplierCatalogItem
type V3APISupplierCatalogItem struct {
	// List of allergens for the item, if any.
	Allergens *[]V3Allergens `json:"allergens,omitempty"`
	// Availability status of the item. Defaults to in_stock.
	Availability *string `json:"availability,omitempty"`
	// Currency code for the price. In ISO 4217 three-letter format. Defaults to GBP.
	Currency *string `json:"currency,omitempty"`
	// Product description
	Description *string `json:"description,omitempty"`
	// REKKI's ID to uniquely identify the catalog item (for REKKI internal reference).
	Id *int32 `json:"id,omitempty"`
	// Item name as would be defined on the customer's product list.
	Name *string `json:"name,omitempty"`
	OrderCutoffTimes *V3OrderCutoffTimes `json:"order_cutoff_times,omitempty"`
	// Product code for the item that maps to the supplier's catalog. Suppliers can modify the product code for future orders at https://supplier.rekki.com
	ProductCode *string `json:"product_code,omitempty"`
	// List of product codes for alternative items when this item is not available.
	ReplacementProducts *[]string `json:"replacement_products,omitempty"`
	// List of date ranges when the item is in-season.
	Seasonality *[]V3Seasonality `json:"seasonality,omitempty"`
	// List of units and their prices that the item can be ordered in.
	UnitsPrices *[]V3APISupplierCatalogUnit `json:"units_prices,omitempty"`
}

// NewV3APISupplierCatalogItem instantiates a new V3APISupplierCatalogItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3APISupplierCatalogItem() *V3APISupplierCatalogItem {
	this := V3APISupplierCatalogItem{}
	return &this
}

// NewV3APISupplierCatalogItemWithDefaults instantiates a new V3APISupplierCatalogItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3APISupplierCatalogItemWithDefaults() *V3APISupplierCatalogItem {
	this := V3APISupplierCatalogItem{}
	return &this
}

// GetAllergens returns the Allergens field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetAllergens() []V3Allergens {
	if o == nil || o.Allergens == nil {
		var ret []V3Allergens
		return ret
	}
	return *o.Allergens
}

// GetAllergensOk returns a tuple with the Allergens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetAllergensOk() (*[]V3Allergens, bool) {
	if o == nil || o.Allergens == nil {
		return nil, false
	}
	return o.Allergens, true
}

// HasAllergens returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasAllergens() bool {
	if o != nil && o.Allergens != nil {
		return true
	}

	return false
}

// SetAllergens gets a reference to the given []V3Allergens and assigns it to the Allergens field.
func (o *V3APISupplierCatalogItem) SetAllergens(v []V3Allergens) {
	o.Allergens = &v
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetAvailability() string {
	if o == nil || o.Availability == nil {
		var ret string
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetAvailabilityOk() (*string, bool) {
	if o == nil || o.Availability == nil {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasAvailability() bool {
	if o != nil && o.Availability != nil {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given string and assigns it to the Availability field.
func (o *V3APISupplierCatalogItem) SetAvailability(v string) {
	o.Availability = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *V3APISupplierCatalogItem) SetCurrency(v string) {
	o.Currency = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V3APISupplierCatalogItem) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *V3APISupplierCatalogItem) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V3APISupplierCatalogItem) SetName(v string) {
	o.Name = &v
}

// GetOrderCutoffTimes returns the OrderCutoffTimes field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetOrderCutoffTimes() V3OrderCutoffTimes {
	if o == nil || o.OrderCutoffTimes == nil {
		var ret V3OrderCutoffTimes
		return ret
	}
	return *o.OrderCutoffTimes
}

// GetOrderCutoffTimesOk returns a tuple with the OrderCutoffTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetOrderCutoffTimesOk() (*V3OrderCutoffTimes, bool) {
	if o == nil || o.OrderCutoffTimes == nil {
		return nil, false
	}
	return o.OrderCutoffTimes, true
}

// HasOrderCutoffTimes returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasOrderCutoffTimes() bool {
	if o != nil && o.OrderCutoffTimes != nil {
		return true
	}

	return false
}

// SetOrderCutoffTimes gets a reference to the given V3OrderCutoffTimes and assigns it to the OrderCutoffTimes field.
func (o *V3APISupplierCatalogItem) SetOrderCutoffTimes(v V3OrderCutoffTimes) {
	o.OrderCutoffTimes = &v
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetProductCode() string {
	if o == nil || o.ProductCode == nil {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetProductCodeOk() (*string, bool) {
	if o == nil || o.ProductCode == nil {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasProductCode() bool {
	if o != nil && o.ProductCode != nil {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *V3APISupplierCatalogItem) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetReplacementProducts returns the ReplacementProducts field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetReplacementProducts() []string {
	if o == nil || o.ReplacementProducts == nil {
		var ret []string
		return ret
	}
	return *o.ReplacementProducts
}

// GetReplacementProductsOk returns a tuple with the ReplacementProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetReplacementProductsOk() (*[]string, bool) {
	if o == nil || o.ReplacementProducts == nil {
		return nil, false
	}
	return o.ReplacementProducts, true
}

// HasReplacementProducts returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasReplacementProducts() bool {
	if o != nil && o.ReplacementProducts != nil {
		return true
	}

	return false
}

// SetReplacementProducts gets a reference to the given []string and assigns it to the ReplacementProducts field.
func (o *V3APISupplierCatalogItem) SetReplacementProducts(v []string) {
	o.ReplacementProducts = &v
}

// GetSeasonality returns the Seasonality field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetSeasonality() []V3Seasonality {
	if o == nil || o.Seasonality == nil {
		var ret []V3Seasonality
		return ret
	}
	return *o.Seasonality
}

// GetSeasonalityOk returns a tuple with the Seasonality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetSeasonalityOk() (*[]V3Seasonality, bool) {
	if o == nil || o.Seasonality == nil {
		return nil, false
	}
	return o.Seasonality, true
}

// HasSeasonality returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasSeasonality() bool {
	if o != nil && o.Seasonality != nil {
		return true
	}

	return false
}

// SetSeasonality gets a reference to the given []V3Seasonality and assigns it to the Seasonality field.
func (o *V3APISupplierCatalogItem) SetSeasonality(v []V3Seasonality) {
	o.Seasonality = &v
}

// GetUnitsPrices returns the UnitsPrices field value if set, zero value otherwise.
func (o *V3APISupplierCatalogItem) GetUnitsPrices() []V3APISupplierCatalogUnit {
	if o == nil || o.UnitsPrices == nil {
		var ret []V3APISupplierCatalogUnit
		return ret
	}
	return *o.UnitsPrices
}

// GetUnitsPricesOk returns a tuple with the UnitsPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3APISupplierCatalogItem) GetUnitsPricesOk() (*[]V3APISupplierCatalogUnit, bool) {
	if o == nil || o.UnitsPrices == nil {
		return nil, false
	}
	return o.UnitsPrices, true
}

// HasUnitsPrices returns a boolean if a field has been set.
func (o *V3APISupplierCatalogItem) HasUnitsPrices() bool {
	if o != nil && o.UnitsPrices != nil {
		return true
	}

	return false
}

// SetUnitsPrices gets a reference to the given []V3APISupplierCatalogUnit and assigns it to the UnitsPrices field.
func (o *V3APISupplierCatalogItem) SetUnitsPrices(v []V3APISupplierCatalogUnit) {
	o.UnitsPrices = &v
}

func (o V3APISupplierCatalogItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Allergens != nil {
		toSerialize["allergens"] = o.Allergens
	}
	if o.Availability != nil {
		toSerialize["availability"] = o.Availability
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OrderCutoffTimes != nil {
		toSerialize["order_cutoff_times"] = o.OrderCutoffTimes
	}
	if o.ProductCode != nil {
		toSerialize["product_code"] = o.ProductCode
	}
	if o.ReplacementProducts != nil {
		toSerialize["replacement_products"] = o.ReplacementProducts
	}
	if o.Seasonality != nil {
		toSerialize["seasonality"] = o.Seasonality
	}
	if o.UnitsPrices != nil {
		toSerialize["units_prices"] = o.UnitsPrices
	}
	return json.Marshal(toSerialize)
}

type NullableV3APISupplierCatalogItem struct {
	value *V3APISupplierCatalogItem
	isSet bool
}

func (v NullableV3APISupplierCatalogItem) Get() *V3APISupplierCatalogItem {
	return v.value
}

func (v *NullableV3APISupplierCatalogItem) Set(val *V3APISupplierCatalogItem) {
	v.value = val
	v.isSet = true
}

func (v NullableV3APISupplierCatalogItem) IsSet() bool {
	return v.isSet
}

func (v *NullableV3APISupplierCatalogItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3APISupplierCatalogItem(val *V3APISupplierCatalogItem) *NullableV3APISupplierCatalogItem {
	return &NullableV3APISupplierCatalogItem{value: val, isSet: true}
}

func (v NullableV3APISupplierCatalogItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3APISupplierCatalogItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


