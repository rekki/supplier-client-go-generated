/*
 * Rekki.com Supplier API
 *
 * The base URL for all API endpoints is https://api.rekki.com  Api key value contains of word Bearer together with api key that you can get from integrations@rekki.com 
 *
 * API version: 
 * Contact: integrations@rekki.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// V3SetStockStatusInput struct for V3SetStockStatusInput
type V3SetStockStatusInput struct {
	Items []V3StockItemState `json:"items"`
}

// NewV3SetStockStatusInput instantiates a new V3SetStockStatusInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3SetStockStatusInput(items []V3StockItemState, ) *V3SetStockStatusInput {
	this := V3SetStockStatusInput{}
	this.Items = items
	return &this
}

// NewV3SetStockStatusInputWithDefaults instantiates a new V3SetStockStatusInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3SetStockStatusInputWithDefaults() *V3SetStockStatusInput {
	this := V3SetStockStatusInput{}
	return &this
}

// GetItems returns the Items field value
func (o *V3SetStockStatusInput) GetItems() []V3StockItemState {
	if o == nil  {
		var ret []V3StockItemState
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *V3SetStockStatusInput) GetItemsOk() (*[]V3StockItemState, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *V3SetStockStatusInput) SetItems(v []V3StockItemState) {
	o.Items = v
}

func (o V3SetStockStatusInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableV3SetStockStatusInput struct {
	value *V3SetStockStatusInput
	isSet bool
}

func (v NullableV3SetStockStatusInput) Get() *V3SetStockStatusInput {
	return v.value
}

func (v *NullableV3SetStockStatusInput) Set(val *V3SetStockStatusInput) {
	v.value = val
	v.isSet = true
}

func (v NullableV3SetStockStatusInput) IsSet() bool {
	return v.isSet
}

func (v *NullableV3SetStockStatusInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3SetStockStatusInput(val *V3SetStockStatusInput) *NullableV3SetStockStatusInput {
	return &NullableV3SetStockStatusInput{value: val, isSet: true}
}

func (v NullableV3SetStockStatusInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3SetStockStatusInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


