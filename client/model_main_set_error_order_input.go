/*
 * Rekki.com Supplier API
 *
 * The base URL for all API endpoints is https://api.rekki.com  Api key value contains of word Bearer together with api key that you can get from integrations@rekki.com 
 *
 * API version: 
 * Contact: integrations@rekki.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MainSetErrorOrderInput struct for MainSetErrorOrderInput
type MainSetErrorOrderInput struct {
	// Number of attempts made to push the integration
	Attempts *int32 `json:"attempts,omitempty"`
	// error message
	Error *string `json:"error,omitempty"`
	Order *IntegrationOrder `json:"order,omitempty"`
}

// NewMainSetErrorOrderInput instantiates a new MainSetErrorOrderInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMainSetErrorOrderInput() *MainSetErrorOrderInput {
	this := MainSetErrorOrderInput{}
	return &this
}

// NewMainSetErrorOrderInputWithDefaults instantiates a new MainSetErrorOrderInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMainSetErrorOrderInputWithDefaults() *MainSetErrorOrderInput {
	this := MainSetErrorOrderInput{}
	return &this
}

// GetAttempts returns the Attempts field value if set, zero value otherwise.
func (o *MainSetErrorOrderInput) GetAttempts() int32 {
	if o == nil || o.Attempts == nil {
		var ret int32
		return ret
	}
	return *o.Attempts
}

// GetAttemptsOk returns a tuple with the Attempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainSetErrorOrderInput) GetAttemptsOk() (*int32, bool) {
	if o == nil || o.Attempts == nil {
		return nil, false
	}
	return o.Attempts, true
}

// HasAttempts returns a boolean if a field has been set.
func (o *MainSetErrorOrderInput) HasAttempts() bool {
	if o != nil && o.Attempts != nil {
		return true
	}

	return false
}

// SetAttempts gets a reference to the given int32 and assigns it to the Attempts field.
func (o *MainSetErrorOrderInput) SetAttempts(v int32) {
	o.Attempts = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *MainSetErrorOrderInput) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainSetErrorOrderInput) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MainSetErrorOrderInput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *MainSetErrorOrderInput) SetError(v string) {
	o.Error = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *MainSetErrorOrderInput) GetOrder() IntegrationOrder {
	if o == nil || o.Order == nil {
		var ret IntegrationOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainSetErrorOrderInput) GetOrderOk() (*IntegrationOrder, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *MainSetErrorOrderInput) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given IntegrationOrder and assigns it to the Order field.
func (o *MainSetErrorOrderInput) SetOrder(v IntegrationOrder) {
	o.Order = &v
}

func (o MainSetErrorOrderInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attempts != nil {
		toSerialize["attempts"] = o.Attempts
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	return json.Marshal(toSerialize)
}

type NullableMainSetErrorOrderInput struct {
	value *MainSetErrorOrderInput
	isSet bool
}

func (v NullableMainSetErrorOrderInput) Get() *MainSetErrorOrderInput {
	return v.value
}

func (v *NullableMainSetErrorOrderInput) Set(val *MainSetErrorOrderInput) {
	v.value = val
	v.isSet = true
}

func (v NullableMainSetErrorOrderInput) IsSet() bool {
	return v.isSet
}

func (v *NullableMainSetErrorOrderInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMainSetErrorOrderInput(val *MainSetErrorOrderInput) *NullableMainSetErrorOrderInput {
	return &NullableMainSetErrorOrderInput{value: val, isSet: true}
}

func (v NullableMainSetErrorOrderInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMainSetErrorOrderInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


