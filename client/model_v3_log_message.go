/*
 * Rekki.com Supplier API
 *
 * The base URL for all API endpoints is https://api.rekki.com  Api key value contains of word Bearer together with api key that you can get from integrations@rekki.com 
 *
 * API version: 
 * Contact: integrations@rekki.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// V3LogMessage struct for V3LogMessage
type V3LogMessage struct {
	// possible values are: \"panic\", \"error\", \"fatal\", \"warn\", \"warning\", \"info\", \"debug\", \"trace\"
	Level *string `json:"level,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewV3LogMessage instantiates a new V3LogMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3LogMessage() *V3LogMessage {
	this := V3LogMessage{}
	return &this
}

// NewV3LogMessageWithDefaults instantiates a new V3LogMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3LogMessageWithDefaults() *V3LogMessage {
	this := V3LogMessage{}
	return &this
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *V3LogMessage) GetLevel() string {
	if o == nil || o.Level == nil {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3LogMessage) GetLevelOk() (*string, bool) {
	if o == nil || o.Level == nil {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *V3LogMessage) HasLevel() bool {
	if o != nil && o.Level != nil {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *V3LogMessage) SetLevel(v string) {
	o.Level = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *V3LogMessage) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3LogMessage) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *V3LogMessage) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *V3LogMessage) SetMessage(v string) {
	o.Message = &v
}

func (o V3LogMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Level != nil {
		toSerialize["level"] = o.Level
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableV3LogMessage struct {
	value *V3LogMessage
	isSet bool
}

func (v NullableV3LogMessage) Get() *V3LogMessage {
	return v.value
}

func (v *NullableV3LogMessage) Set(val *V3LogMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableV3LogMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableV3LogMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3LogMessage(val *V3LogMessage) *NullableV3LogMessage {
	return &NullableV3LogMessage{value: val, isSet: true}
}

func (v NullableV3LogMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3LogMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


