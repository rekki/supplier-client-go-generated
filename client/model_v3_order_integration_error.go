/*
 * Rekki.com Supplier API
 *
 * The base URL for all API endpoints is https://api.rekki.com  Api key value contains of word Bearer together with api key that you can get from integrations@rekki.com 
 *
 * API version: 
 * Contact: integrations@rekki.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// V3OrderIntegrationError struct for V3OrderIntegrationError
type V3OrderIntegrationError struct {
	// Number of attempts made to push the integration
	Attempts *int32 `json:"attempts,omitempty"`
	// error message
	Error *string `json:"error,omitempty"`
	// Order reference
	Reference *string `json:"reference,omitempty"`
}

// NewV3OrderIntegrationError instantiates a new V3OrderIntegrationError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3OrderIntegrationError() *V3OrderIntegrationError {
	this := V3OrderIntegrationError{}
	return &this
}

// NewV3OrderIntegrationErrorWithDefaults instantiates a new V3OrderIntegrationError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3OrderIntegrationErrorWithDefaults() *V3OrderIntegrationError {
	this := V3OrderIntegrationError{}
	return &this
}

// GetAttempts returns the Attempts field value if set, zero value otherwise.
func (o *V3OrderIntegrationError) GetAttempts() int32 {
	if o == nil || o.Attempts == nil {
		var ret int32
		return ret
	}
	return *o.Attempts
}

// GetAttemptsOk returns a tuple with the Attempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3OrderIntegrationError) GetAttemptsOk() (*int32, bool) {
	if o == nil || o.Attempts == nil {
		return nil, false
	}
	return o.Attempts, true
}

// HasAttempts returns a boolean if a field has been set.
func (o *V3OrderIntegrationError) HasAttempts() bool {
	if o != nil && o.Attempts != nil {
		return true
	}

	return false
}

// SetAttempts gets a reference to the given int32 and assigns it to the Attempts field.
func (o *V3OrderIntegrationError) SetAttempts(v int32) {
	o.Attempts = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *V3OrderIntegrationError) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3OrderIntegrationError) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *V3OrderIntegrationError) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *V3OrderIntegrationError) SetError(v string) {
	o.Error = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *V3OrderIntegrationError) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3OrderIntegrationError) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *V3OrderIntegrationError) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *V3OrderIntegrationError) SetReference(v string) {
	o.Reference = &v
}

func (o V3OrderIntegrationError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attempts != nil {
		toSerialize["attempts"] = o.Attempts
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	return json.Marshal(toSerialize)
}

type NullableV3OrderIntegrationError struct {
	value *V3OrderIntegrationError
	isSet bool
}

func (v NullableV3OrderIntegrationError) Get() *V3OrderIntegrationError {
	return v.value
}

func (v *NullableV3OrderIntegrationError) Set(val *V3OrderIntegrationError) {
	v.value = val
	v.isSet = true
}

func (v NullableV3OrderIntegrationError) IsSet() bool {
	return v.isSet
}

func (v *NullableV3OrderIntegrationError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3OrderIntegrationError(val *V3OrderIntegrationError) *NullableV3OrderIntegrationError {
	return &NullableV3OrderIntegrationError{value: val, isSet: true}
}

func (v NullableV3OrderIntegrationError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3OrderIntegrationError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


